(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{580:function(a,t,n){"use strict";n.r(t);var i=n(18),e=Object(i.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"css-animation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-animation"}},[a._v("#")]),a._v(" Css animation")]),a._v(" "),n("h2",{attrs:{id:"语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),n("div",{staticClass:"language-css extra-class"},[n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{pre:!0,attrs:{class:"token property"}},[a._v("animation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction\n")])])]),n("h3",{attrs:{id:"animation-name"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-name"}},[a._v("#")]),a._v(" animation-name")]),a._v(" "),n("p",[a._v("自定义动画名称，使用"),n("code",[a._v("@keyframes")]),a._v("定义动画。")]),a._v(" "),n("h3",{attrs:{id:"animation-duration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-duration"}},[a._v("#")]),a._v(" animation-duration")]),a._v(" "),n("p",[a._v("动画持续时间，以秒或者毫秒为单位。")]),a._v(" "),n("h3",{attrs:{id:"animation-timing-function"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-timing-function"}},[a._v("#")]),a._v(" animation-timing-function")]),a._v(" "),n("p",[a._v("动画的速度曲线。")]),a._v(" "),n("p",[n("code",[a._v("ease")]),a._v("默认值，动画以低速开始，然后加快，在结束前变慢。")]),a._v(" "),n("p",[n("code",[a._v("ease-in")]),a._v("动画以低速开始。")]),a._v(" "),n("p",[n("code",[a._v("ease-in-out")]),a._v("动画以低速开始和结束。")]),a._v(" "),n("p",[n("code",[a._v("ease-out")]),a._v("动画以低速结束。")]),a._v(" "),n("p",[n("code",[a._v("cubic-bezier(*n*,*n*,*n*,*n*)")]),a._v("三次贝塞尔（Cubic Bezier）函数生成速度曲线。")]),a._v(" "),n("h3",{attrs:{id:"animation-delay"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-delay"}},[a._v("#")]),a._v(" animation-delay")]),a._v(" "),n("p",[a._v("动画开始延迟时间")]),a._v(" "),n("h3",{attrs:{id:"animation-iteration-count"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-iteration-count"}},[a._v("#")]),a._v(" animation-iteration-count")]),a._v(" "),n("p",[a._v("动画播放次数")]),a._v(" "),n("h3",{attrs:{id:"animation-direction"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#animation-direction"}},[a._v("#")]),a._v(" animation-direction")]),a._v(" "),n("p",[a._v("动画是否轮流播放")]),a._v(" "),n("h2",{attrs:{id:"keyframes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#keyframes"}},[a._v("#")]),a._v(" keyframes")]),a._v(" "),n("p",[a._v("动画定义规则， 关键帧动画。")]),a._v(" "),n("p",[n("code",[a._v("from")]),a._v("动画开始时刻状态")]),a._v(" "),n("p",[n("code",[a._v("to")]),a._v("动画结束时刻状态")]),a._v(" "),n("p",[n("code",[a._v("xx%")]),a._v("百分比定义关键帧状态")])])}),[],!1,null,null,null);t.default=e.exports}}]);